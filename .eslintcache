[{"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\index.js":"1","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\App\\index.js":"2","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\App\\App.js":"3","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Planets\\index.js":"4","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Header\\index.js":"5","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Planets\\Planets.js":"6","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Header\\Header.js":"7","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\HeaderItem\\index.js":"8","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\HeaderItem\\HeaderItem.js":"9","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Error\\index.js":"10","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Error\\Error.js":"11","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Peoples\\Peoples.js":"12","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Select\\Select.js":"13","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Preloader\\Preloader.js":"14","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Species\\index.js":"15","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Species\\Species.js":"16","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Form\\index.js":"17","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Form\\Form.js":"18","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Select\\index.js":"19","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\MainInfo\\index.js":"20","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\MainInfo\\MainInfo.js":"21","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\SubInfoBlock\\index.js":"22","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\SubInfo\\index.js":"23","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\SubInfoBlock\\SubInfoBlock.js":"24","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\SubInfo\\SubInfo.js":"25"},{"size":369,"mtime":1613608943809,"results":"26","hashOfConfig":"27"},{"size":44,"mtime":1612554630012,"results":"28","hashOfConfig":"27"},{"size":1035,"mtime":1614027995268,"results":"29","hashOfConfig":"27"},{"size":56,"mtime":1612554629994,"results":"30","hashOfConfig":"27"},{"size":53,"mtime":1612554629960,"results":"31","hashOfConfig":"27"},{"size":3774,"mtime":1614027425369,"results":"32","hashOfConfig":"27"},{"size":1268,"mtime":1614021880784,"results":"33","hashOfConfig":"27"},{"size":67,"mtime":1612813210064,"results":"34","hashOfConfig":"27"},{"size":351,"mtime":1614023386808,"results":"35","hashOfConfig":"27"},{"size":50,"mtime":1612554629941,"results":"36","hashOfConfig":"27"},{"size":208,"mtime":1613944224922,"results":"37","hashOfConfig":"27"},{"size":3212,"mtime":1614023764372,"results":"38","hashOfConfig":"27"},{"size":463,"mtime":1613517402369,"results":"39","hashOfConfig":"27"},{"size":260,"mtime":1613420880487,"results":"40","hashOfConfig":"27"},{"size":56,"mtime":1613507556134,"results":"41","hashOfConfig":"27"},{"size":3267,"mtime":1614025018117,"results":"42","hashOfConfig":"27"},{"size":47,"mtime":1613592732134,"results":"43","hashOfConfig":"27"},{"size":455,"mtime":1614023455230,"results":"44","hashOfConfig":"27"},{"size":53,"mtime":1613504102164,"results":"45","hashOfConfig":"27"},{"size":60,"mtime":1613594754052,"results":"46","hashOfConfig":"27"},{"size":2275,"mtime":1614024429237,"results":"47","hashOfConfig":"27"},{"size":71,"mtime":1613765070729,"results":"48","hashOfConfig":"27"},{"size":56,"mtime":1613765070694,"results":"49","hashOfConfig":"27"},{"size":1213,"mtime":1614024771736,"results":"50","hashOfConfig":"27"},{"size":889,"mtime":1614024548630,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1g9hsvw",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\index.js",[],["106","107"],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\App\\index.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\App\\App.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Planets\\index.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Header\\index.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Planets\\Planets.js",["108","109","110","111","112"],"import React, {useState, useEffect, useRef} from 'react'\r\n\r\nimport MainInfo from \"../MainInfo\";\r\nimport Error from \"../Error\";\r\nimport Select from \"../Select/Select\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport SubInfoBlock from \"../SubInfoBlock\";\r\nimport SubInfo from \"../SubInfo\";\r\nimport Form from \"../Form\";\r\n\r\n\r\nimport './style.css'\r\n\r\nfunction Planets({getData}) {\r\n\r\n    const url = 'https://swapi.dev/api/planets/'\r\n    //Объект получаемой планеты\r\n    const [planet, setPlanet] = useState({});\r\n    //ID персонажа из select\r\n    const [planetId, setPlanetId] = useState(1);\r\n    //Состояние ошибки\r\n    const [error, setErrorStatus] = useState();\r\n    //Массив названий планет полученных при загрузке\r\n    const [selectData, setSelectData] = useState([])\r\n    //состояние preloader\r\n    const [preloader, setPreloader] = useState(true)\r\n    //Объект фильмов в слайдере\r\n    const [films, setFilms] = useState([])\r\n    //Объект со всеми планетами\r\n    const [allTypeData, setAllTypeData] = useState([])\r\n\r\n    const isInitialMount = useRef(true);\r\n\r\n    useEffect(() => {\r\n        if (isInitialMount.current) {\r\n            isInitialMount.current = false;\r\n        } else {\r\n            getPlanetFilms()\r\n        }\r\n    }, [planet]);\r\n\r\n    // useEffect(() => {\r\n    //     getData(url).then(({data}) => {\r\n    //         setSelectData(data.results.map(it => it.name))\r\n    //         setPreloader(false)\r\n    //     })\r\n    // }, []);\r\n\r\n//Получить имена планет при первом рендере страницы\r\n    useEffect(() => {\r\n        getData(url).then(({data}) => {\r\n            setAllTypeData(data)\r\n        })\r\n    }, []);\r\n\r\n    //Проверка alltypedata и ее ключей\r\n    useEffect(() => {\r\n        if (Object.keys(allTypeData).length !== 0) {\r\n            setSelectData((selectData) => [...selectData, ...allTypeData.results.map(it => it.name)])\r\n            if (allTypeData.next !== null) {\r\n                getData(allTypeData.next).then(({data}) => (\r\n                    setAllTypeData(data)\r\n                ))\r\n            } else {\r\n                setPreloader(false)\r\n            }\r\n        }\r\n    }, [allTypeData]);\r\n        //[alltypedata]-чтобы запускать фун-ю каждый раз пока next не равен null\r\n\r\n\r\n    const updatePlanetsId = (e) => {\r\n        setPlanetId(e.target.value)\r\n    };\r\n//-ф-я для полчуения планеты т.е. ее даных\r\n    const getPlanets = (e) => {\r\n        setFilms([])\r\n        e.preventDefault();\r\n        if (planetId > 0 && planetId <= 60) {\r\n            getData(`${url} ${planetId}`).then((response) => {\r\n                setPlanet(response.data);\r\n                setErrorStatus(false)\r\n            })\r\n        } else {\r\n            setErrorStatus(true)\r\n\r\n        }\r\n\r\n    };\r\n    //ф-я для получения фильмов к планетам\r\n    const getPlanetFilms = () => {\r\n        planet.films.map((it) => getData(it).then(({data}) => {\r\n            setFilms((prev) => [...prev, data])\r\n        }))\r\n    };\r\n\r\n    return (\r\n        <div className=\"planets\">\r\n\r\n            {preloader ? <Preloader/> :\r\n                <Form formName={\"Planets\"} sendData={getPlanets} selectData={selectData} updateId={updatePlanetsId}/>}\r\n            {error ? <Error/> : error === undefined ? null : <MainInfo data={planet} maxCount={8}/>}\r\n            {error === undefined ? '' : null}\r\n            {films.length !== 0 ?\r\n                <SubInfo data={films} fields={['title']}/> : null\r\n            }\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default Planets\r\n","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Header\\Header.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\HeaderItem\\index.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\HeaderItem\\HeaderItem.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Error\\index.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Error\\Error.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Peoples\\Peoples.js",["113","114","115"],"import React, {useState, useEffect} from 'react';\r\nimport Error from \"../Error\";\r\nimport Select from \"../Select/Select\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport MainInfo from \"../MainInfo\";\r\nimport Form from \"../Form\";\r\nimport './style.css'\r\n\r\nfunction Peoples({getData}) {\r\n    // url для получения аватара персонажа\r\n    const url = `https://swapi.dev/api/people/`\r\n\r\n    //Объект получаемого персонажа\r\n    const [people, setPeople] = useState({});\r\n    //id персонажа выбранного из select\r\n    const [peopleId, setPeopleId] = useState(1);\r\n    //Состояние ошибки\r\n    const [error, setErrorStatus] = useState();\r\n    //Массив названий персонажей полученный при загрузке\r\n    const [selectData, setSelectData] = useState([])\r\n    // Состояние preloader  для отображения загрузки,когда мы получаем данные\r\n    const [preloader, setPreloader]= useState(true)\r\n    //Объект со всеми персонажами\r\n    const [allTypeData, setAllTypeData] = useState([])\r\n\r\n    //Получить имена персонажей при первом рендере страницы\r\n    useEffect(() => {\r\n        getData(url).then(({data}) => {\r\n            setAllTypeData(data)\r\n        })\r\n    }, []);\r\n\r\n    //проврерка alltypedata и ее ключей\r\n    useEffect(() => {\r\n        if (Object.keys(allTypeData).length !== 0) {\r\n            setSelectData((selectData) => [...selectData, ...allTypeData.results.map(it => it.name)])\r\n            if (allTypeData.next !== null) {\r\n                getData(allTypeData.next).then(({data}) => (\r\n                    setAllTypeData(data)\r\n                ))\r\n            } else {\r\n                setPreloader(false)\r\n            }\r\n        }\r\n    }, [allTypeData]);\r\n\r\n    // useEffect(() => {\r\n    //     getData(url).then(({data}) => {\r\n    //         setSelectData(data.results.map(it => it.name))\r\n    //         setPreloader(false)\r\n    //     })\r\n    // }, [])\r\n\r\n    const updatePeopleId = (e) => {\r\n        if(Number(e.target.value )>= 17){\r\n            setPeopleId(Number(e.target.value)+1)\r\n        }else{\r\n            setPeopleId(Number(e.target.value))\r\n        }\r\n\r\n    };\r\n\r\n//ф-я для получения персонажей и их данных\r\n    const getPeoples = (e) => {\r\n        e.preventDefault();\r\n        if (peopleId > 0 && peopleId <= 84 ) {\r\n            getData(`${url} ${peopleId}`).then((response) => {\r\n                setPeople(response.data);\r\n                setErrorStatus(false)\r\n            })\r\n\r\n\r\n        } else {\r\n            setErrorStatus(true)\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"peoples\">\r\n            {preloader ? <Preloader/> :\r\n                <Form formName={\"People\"} sendData={getPeoples}  selectData={selectData} updateId={updatePeopleId} />}\r\n\r\n\r\n\r\n            {error ? <Error/> : error === undefined ? null : <MainInfo data={people} maxCount={8}/>}\r\n            {error === undefined ? '' : null}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Peoples\r\n\r\n\r\n","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Select\\Select.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Preloader\\Preloader.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Species\\index.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Species\\Species.js",["116","117","118","119"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport Error from \"../Error\";\r\nimport Select from \"../Select/Select\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport Form from \"../Form\";\r\nimport MainInfo from \"../MainInfo\";\r\n\r\n\r\nimport './style.css'\r\n\r\n\r\nfunction Species({getData}) {\r\n    const url = 'https://swapi.dev/api/species/'\r\n    //получение объекта разновидности\r\n    const [specie, setSpecie] = useState({});\r\n    // ID разновидности\r\n    const [specieId, setSpecieId] = useState(1);\r\n    //состояние ошибки\r\n    const [error, setErrorStatus] = useState();\r\n    //Массив названий разновидностей полученных при загрузке\r\n    const [selectData, setSelectData] = useState([])\r\n    // состояние preloader\r\n    const [preloader, setPreloader] = useState(true)\r\n    //массив для получения всех разновидностей\r\n    const [allTypeData, setAllTypeData] = useState([])\r\n\r\n\r\n\r\n    // const isInitialMount = useRef(true);\r\n    //\r\n    // useEffect(() => {\r\n    //     if (isInitialMount.current) {\r\n    //         isInitialMount.current = false;\r\n    //     } else {\r\n    //         getSpecieHuman()\r\n    //     }\r\n    // }, [specie]);\r\n\r\n    //Получить названия разновидностей при первом рендере страницы\r\n    useEffect(() => {\r\n        getData(url).then(({data}) => {\r\n            setAllTypeData(data)\r\n        })\r\n    }, []);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     getData(url).then(({data}) => {\r\n    //         setSelectData(data.results.map(it => it.name))\r\n    //         setPreloader(false)\r\n    //     })\r\n    // }, []);\r\n\r\n//обновить id типа\r\n    const updateSpeciesId = (e) => {\r\n        setSpecieId(e.target.value)\r\n    };\r\n\r\n    //ф-я для получения разновидностей\r\n    const getSpecies  = (e) => {\r\n        // setHuman([])\r\n        e.preventDefault();\r\n        if (specieId > 0 && specieId <= 60) {\r\n            getData(`${url} ${specieId}`).then((response) => {\r\n                setSpecie(response.data);\r\n                setErrorStatus(false)\r\n            })\r\n        } else {\r\n            setErrorStatus(true)\r\n\r\n        }\r\n\r\n    };\r\n\r\n    //Проверка alltypedata и ее ключей\r\n    useEffect(() => {\r\n        if (Object.keys(allTypeData).length !== 0) {\r\n            setSelectData((selectData) => [...selectData, ...allTypeData.results.map(it => it.name)])\r\n            if (allTypeData.next !== null) {\r\n                getData(allTypeData.next).then(({data}) => (\r\n                    setAllTypeData(data)\r\n                ))\r\n            } else {\r\n                setPreloader(false)\r\n            }\r\n        }\r\n    }, [allTypeData]);\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"species\">\r\n\r\n            {preloader ? <Preloader/> :\r\n                <Form formName={\"Species\"} sendData={getSpecies}  selectData={selectData} updateId={updateSpeciesId} />}\r\n\r\n\r\n            {error ? <Error/> : error === undefined ? null : <MainInfo data={specie} maxCount={8}/>}\r\n            {error === undefined ? '' : null}\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Species\r\n","C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Form\\index.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Form\\Form.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\Select\\index.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\MainInfo\\index.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\MainInfo\\MainInfo.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\SubInfoBlock\\index.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\SubInfo\\index.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\SubInfoBlock\\SubInfoBlock.js",[],"C:\\Users\\Acer\\Desktop\\react#1\\reactproject\\src\\components\\SubInfo\\SubInfo.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":14},{"ruleId":"124","severity":1,"message":"128","line":7,"column":8,"nodeType":"126","messageId":"127","endLine":7,"endColumn":20},{"ruleId":"129","severity":1,"message":"130","line":40,"column":8,"nodeType":"131","endLine":40,"endColumn":16,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"133","line":54,"column":8,"nodeType":"131","endLine":54,"endColumn":10,"suggestions":"134"},{"ruleId":"129","severity":1,"message":"133","line":68,"column":8,"nodeType":"131","endLine":68,"endColumn":21,"suggestions":"135"},{"ruleId":"124","severity":1,"message":"125","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":14},{"ruleId":"129","severity":1,"message":"136","line":31,"column":8,"nodeType":"131","endLine":31,"endColumn":10,"suggestions":"137"},{"ruleId":"129","severity":1,"message":"133","line":45,"column":8,"nodeType":"131","endLine":45,"endColumn":21,"suggestions":"138"},{"ruleId":"124","severity":1,"message":"139","line":1,"column":37,"nodeType":"126","messageId":"127","endLine":1,"endColumn":43},{"ruleId":"124","severity":1,"message":"125","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":14},{"ruleId":"129","severity":1,"message":"133","line":44,"column":8,"nodeType":"131","endLine":44,"endColumn":10,"suggestions":"140"},{"ruleId":"129","severity":1,"message":"133","line":87,"column":8,"nodeType":"131","endLine":87,"endColumn":21,"suggestions":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'Select' is defined but never used.","Identifier","unusedVar","'SubInfoBlock' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPlanetFilms'. Either include it or remove the dependency array.","ArrayExpression",["144"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array. If 'getData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["145"],["146"],"React Hook useEffect has missing dependencies: 'getData' and 'url'. Either include them or remove the dependency array. If 'getData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["147"],["148"],"'useRef' is defined but never used.",["149"],["150"],"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"155","fix":"159"},{"desc":"153","fix":"160"},{"desc":"155","fix":"161"},"Update the dependencies array to be: [getPlanetFilms, planet]",{"range":"162","text":"163"},"Update the dependencies array to be: [getData]",{"range":"164","text":"165"},"Update the dependencies array to be: [allTypeData, getData]",{"range":"166","text":"167"},"Update the dependencies array to be: [getData, url]",{"range":"168","text":"169"},{"range":"170","text":"167"},{"range":"171","text":"165"},{"range":"172","text":"167"},[1244,1252],"[getPlanetFilms, planet]",[1630,1632],"[getData]",[2120,2133],"[allTypeData, getData]",[1149,1151],"[getData, url]",[1640,1653],[1343,1345],[2556,2569]]